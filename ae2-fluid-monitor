local function formatBytes(bytes)
    if bytes >= 1000000000 then
        return string.format("%.1fM", bytes / 1000000000)
    elseif bytes >= 1000000 then
        return string.format("%.1fK", bytes / 1000000)
    else
        return string.format("%.1f", bytes / 1000)
    end
end

local function formatFluidName(name)
    return name:match(".+:(.+)") or name
end

local function centerText(monitor, text, line)
    local w, _ = monitor.getSize()
    local x = math.floor((w - #text) / 2) + 1
    monitor.setCursorPos(x, line)
    monitor.write(text)
end

-- Function to get fluids and storage info
local function getFluidStorageInfo()
    local bridge = peripheral.find("me_bridge")
    if not bridge then return {}, 0, 0, 0 end

    local fluids = bridge.listFluid and bridge.listFluid() or {}
    local total = bridge.getTotalFluidStorage and bridge.getTotalFluidStorage() or 0
    local used = 0
    for _, f in ipairs(fluids) do
        used = used + (f.amount or 0)
    end

    if bridge.getUsedExternFluidStorage then
        used = used + (bridge.getUsedExternFluidStorage() or 0)
    end

    local free = total - used
    return fluids, total, used, free
end

-- Main display function
local function updateDisplay()
    local monitor = peripheral.find("monitor")
    if not monitor then print("No monitor found.") return end

    monitor.setTextScale(1)
    monitor.clear()

    while true do
        monitor.clear()
        local fluids, total, used, free = getFluidStorageInfo()

        centerText(monitor, string.format("Used: %s B / Free: %s B", formatBytes(used), formatBytes(free)), 1)
        centerText(monitor, string.format("Total: %s B", formatBytes(total)), 2)

        table.sort(fluids, function(a,b) return (a.amount or 0) > (b.amount or 0) end)

        local line = 4
        for _, f in ipairs(fluids) do
            centerText(monitor, string.format("%s: %s B", formatFluidName(f.name), formatBytes(f.amount or 0)), line)
            line = line + 1
        end

        sleep(5)
    end
end

updateDisplay()
