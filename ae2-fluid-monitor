-- Format bytes to human-readable
local function formatBytes(bytes)
    if bytes >= 1000000000 then
        return string.format("%.1fM", bytes / 1000000000)
    elseif bytes >= 1000000 then
        return string.format("%.1fK", bytes / 1000000)
    else
        return string.format("%.1f", bytes / 1000)
    end
end

-- Strip mod ID from fluid name
local function formatFluidName(name)
    return name:match(".+:(.+)") or name
end

-- Center text on monitor
local function centerText(monitor, text, line)
    local w, _ = monitor.getSize()
    local x = math.floor((w - #text) / 2) + 1
    monitor.setCursorPos(x, line)
    monitor.write(text)
end

-- Get internal fluids from AE2
local function getInternalFluids(bridge)
    if bridge.getFluids then
        local fluids = bridge.getFluids() or {}
        -- Optional: AE2 Bytes â†’ Millibuckets
        for _, f in ipairs(fluids) do
            if f.amount then
                f.amount = math.floor(f.amount / 1000)
            end
        end
        return fluids
    end
    return {}
end

-- Get external fluid usage (total only)
local function getExternalFluidUsage(bridge)
    if bridge.getUsedExternFluidStorage then
        return bridge.getUsedExternFluidStorage() or 0
    end
    return 0
end

-- Main display loop
local function updateDisplay()
    local monitor = peripheral.find("monitor")
    local bridge = peripheral.find("me_bridge")
    if not monitor then
        print("No monitor found.")
        return
    end
    if not bridge then
        print("No ME Bridge found.")
        return
    end

    monitor.setTextScale(1)
    monitor.clear()

    while true do
        monitor.clear()

        local internalFluids = getInternalFluids(bridge)
        local externalUsed = getExternalFluidUsage(bridge)

        -- Sort internal fluids by amount descending
        table.sort(internalFluids, function(a,b) return (a.amount or 0) > (b.amount or 0) end)

        -- Start displaying at line 1
        local line = 1

        -- Display internal fluids
        for _, f in ipairs(internalFluids) do
            centerText(monitor, string.format("%s: %s B", formatFluidName(f.name), formatBytes(f.amount or 0)), line)
            line = line + 1
        end

        -- Display external fluids summary (optional)
        if externalUsed > 0 then
            centerText(monitor, string.format("External Used: %s B", formatBytes(externalUsed)), line)
            line = line + 1
        end

        sleep(5)
    end
end

updateDisplay()
