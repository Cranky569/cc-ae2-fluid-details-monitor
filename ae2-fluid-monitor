-- Function to format large numbers into a human-readable format
function formatBytes(bytes)
    if bytes >= 1000000000 then
        return string.format("%.1fM", bytes / 1000000000) -- MegaBuckets
    elseif bytes >= 1000000 then
        return string.format("%.1fK", bytes / 1000000) -- KiloBuckets
    else
        return string.format("%.1f", bytes / 1000) -- Buckets
    end
end

-- Function to get chemicals from ME Bridge
function getChemicals()
    local chemicals = {}
    local bridge = peripheral.find("me_bridge")
    if bridge and bridge.listChemicals then
        chemicals = bridge.listChemicals() or {}
    end
    return chemicals
end

-- Function to remove mod ID from chemical name
function formatChemicalName(name)
    return name:match(".+:(.+)") or name
end

-- Function to center text on the monitor
function centerText(monitor, text, line)
    local w, _ = monitor.getSize()
    local x = math.floor((w - #text) / 2) + 1
    monitor.setCursorPos(x, line)
    monitor.write(text)
end

-- Main program
function updateDisplay()
    local monitor = peripheral.find("monitor")
    if not monitor then
        print("No monitor found.")
        return
    end

    monitor.setTextScale(1)
    monitor.clear()

    while true do
        monitor.clear()

        -- Display individual chemicals
        local chemicals = getChemicals()

        -- Sort chemicals by amount in descending order
        table.sort(chemicals, function(a, b)
            return (a.amount or 0) > (b.amount or 0)
        end)

        local line = 1
        for _, chem in ipairs(chemicals) do
            local name = formatChemicalName(chem.name or "Unknown")
            local amount = chem.amount or 0
            local formattedAmount = formatBytes(amount)
            local displayText = string.format("%s: %s B", name, formattedAmount)
            centerText(monitor, displayText, line)
            line = line + 1
        end

        -- Sleep before updating again
        sleep(5)
    end
end

-- Start the program
updateDisplay()
